<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
    "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <property name="fileExtensions" value="java"/>
	
	<module name="LineLength">
		<property name="max" value="120"/> <!--The max will be based on how much the code editor can take without the need for scrolling horizontally -->
	</module>
    <module name="TreeWalker">
		<module name="UnusedImports"/>
			<module name="OneStatementPerLine"/>
			<module name="UnusedLocalVariable"/>
			<module name="DefaultComesLast"/>
			<module name="EmptyStatement">
			<message key="empty.statement"
				value="Sudli pud"/>
		</module>
		<module name="IllegalCatch">
			<message key="illegal.catch"
				value="Using parent exceptions is highly discouraged"/>
		</module>
		<module name="InnerAssignment">
			<message key="assignment.inner.avoid"
				value="Inner assignments should be avoided"/>
		</module>
		<module name="MultipleVariableDeclarations">
			<message key="multiple.variable.declarations"
				value="Using parent exceptions is highly discouraged"/>
			<message key="multiple.variable.declarations.comma"
				value="Using parent exceptions is highly discouraged"/>
		</module>
		<module name="NestedForDepth">
			<property name="max" value="2"/>
			<message key="nested.for.depth"
				value="Hirap basahin par pag sobra na sa isang nested for loop"/>
		</module>
		<module name="NestedIfDepth">
			<property name="max" value="3"/>
			<message key="nested.if.depth"
				value="Hirap basahin par pag sobra na sa dalawang if statement. Consider using and or or operators"/>
		</module>
		<module name="RequireThis">
				<property name="validateOnlyOverlapping" value="true"/>
				<property name="checkFields" value="true"/>
		</module>
		<module name="SimplifyBooleanExpression">
			<message key="simplify.expression" value="Over-complicated boolean expression can be simplified"/>
		</module>
		<module name="SimplifyBooleanReturn">
			<message key="simplify.boolReturn" value="Over-complicated boolean return statement can be simplified"/>
		</module>
		<module name="StringLiteralEquality">
			<message key="string.literal.equality" value="String is an object, use 'equals' to compare object references"/>
		</module>
		<module name="ParameterNumber">
			<property name="max" value="10"/>
			<message key="maxParam" value="For readability purposes, the recommended maximum number of parameter in a method is only up to 10"/>
		</module>
		
		<!--Linter regarding whiteSpaces-->
		<module name="NoWhitespaceBeforeCaseDefaultColon">
			<message key="ws.preceded" value="Unnecessary whitespace before switch case colon"/>
		</module>
    </module>
</module>