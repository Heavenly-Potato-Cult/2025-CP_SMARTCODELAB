<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picturebox_loadingGIF.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhlgCWAPf/AAAAAACq/wCz/wC1/wC2/wC2/wC2/wC2/wC2/wC3/wC3/wC3/wC3/wC3/wC4/wC4
        /wC4/wC4/wC4/wC4/wC4/wC4/wC4/wC4/wC4/wC4/wC4/wC4/wC4/wC4/wC4/wC4/wC4/wC4/wC4/wC4
        /wC4/wC4/wC4/wC4/wC4/wC4/wC4/wC4/wC4/wC4/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5
        /wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5
        /wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5
        /wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5
        /wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC5/wC6/wC6/wC6/wC6/wC6/wC6
        /wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6
        /wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6
        /wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC6/wC7/wC7/wC7
        /wC7/wC7/wC7/wC7/wC7/wC7/wC7/wC7/wC7/wC7/wC7/wC7/wC7/wC7/wC7/wC7/wC7/wC7/wC7/wC7
        /wC7/wC7/wC7/wC8/wC8/wC8/wC8/wC8/wC8/wC8/wC8/wC8/wC8/wC8/wC8/wC8/wC9/wC9/wC9/wC9
        /wC9/wC9/wC+/wC//wC//wC//wC//wC//wC//wC//wC//wC//wDD/wDE/wDG/wDM/wDU/wD//wD//wD/
        ACH/C05FVFNDQVBFMi4wAwEAAAAh+QQJAwAUACxEACYADwAOAIQAAAAAqv8As/8Atf8Atv8At/8AuP8A
        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
        gAAAOw==
</value>
  </data>
</root>